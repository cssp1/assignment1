#!/usr/bin/env python

# Copyright (c) 2015 Battlehouse Inc. All rights reserved.
# Use of this source code is governed by an MIT-style license that can be
# found in the LICENSE file.

# CGI script for customer support and server management

import os, sys, subprocess, traceback, time, re, copy
import cgi, cgitb
import urllib, urllib2
import SpinFacebook
import SpinNoSQL
import SpinNoSQLLog
import SpinConfig
import SpinJSON
import SpinGoogleAuth
import SpinLog
import FastGzipFile
import ControlAPI
from spinlibs.SpinHTTP import private_ip_re

# this file assumes JSON decoding on raw CONTROLAPI calls
def do_CONTROLAPI(*args, **kwargs): return SpinJSON.loads(ControlAPI.CONTROLAPI_raw(*args, **kwargs))
def do_CONTROLAPI_checked(*args, **kwargs): return ControlAPI.CONTROLAPI(*args, **kwargs)

if __name__ == "__main__":
    accounts = [61536, 62056, 62484, 66223, 66480, 68393, 68574, 74138, 74505, 76186, 76216, 76431, 76437, 86691, 87791, 96394, 96689, 96702, 97256, 97655, 98452, 98501, 98702, 106582, 106705, 106707, 106910, 106980, 106988, 107162, 107175, 107227, 107264, 111682, 116307, 127809, 129577, 129943, 131824, 136389, 139644, 139901, 148302, 152728, 168159, 168418, 169357, 171162, 172436, 173182, 174882, 176721, 182871, 195630, 198883, 199493, 201446, 201742, 203041, 207564, 211418, 213517, 213859, 218295, 220117, 220131, 221651, 223424, 224237, 226026, 226047, 226067, 230447, 231717, 233621, 235597, 235625, 235768, 235807, 237666, 239719, 239743, 240230, 240735, 241471, 241734, 241767, 241769, 242184, 242244, 242364, 242452, 242830, 242838, 242884, 243406, 243795, 243823, 243828, 243899, 244054, 244170, 244908, 245730, 245790, 245828, 246014, 246639, 246907, 247847, 247961, 247991, 248452, 252128, 253064, 254041, 254742, 254980, 254981, 255090, 255091, 256878, 257029, 258498, 259182, 260743, 260774, 260788, 262386, 262558, 262909, 263116, 264437, 266329, 267121, 269449, 270845, 271025, 271529, 272573, 272960, 272965, 272968, 272971, 272973, 272988, 273140, 273165, 273231, 273386, 273522, 273551, 273556, 273559, 274581, 274679, 275010, 275032, 275085, 275123, 276583, 276778, 276810, 276812, 276954, 277076, 277078, 277237, 277548, 278683, 280889, 280904, 281420, 282378, 282991, 283497, 283502, 284678, 284848, 284900, 285303, 285348, 285719, 286913, 287151, 287152, 287153, 287382, 287531, 289395, 289397, 289464, 289880, 289944, 289945, 290787, 291019, 291024, 291076, 291337, 291358, 291364, 291388, 291435, 291553, 291909, 291931, 291954, 292988, 293136, 293158, 293612, 294954, 295294, 295321, 295353, 295454, 295500, 295646, 295697, 296306, 296936, 297066, 297092, 297453, 297709, 297798, 297799, 297802, 297803, 297881, 297910, 298116, 298160, 299097, 299124, 299309, 299368, 299370, 299371, 299372, 299431, 299432, 299434, 299435, 299469, 299691, 300151, 301342, 301426, 301427, 301429, 301440, 301450, 301571, 301572, 301573, 301760, 301887, 302071, 302090, 302116, 302144, 302158, 302224, 302255, 302258, 302261, 302262, 302263, 302264, 302265, 302266, 302268, 302790, 303131, 303357, 303401, 303456, 303457, 303539, 303590, 303592, 303736, 303738, 303740, 303742, 303845, 303993, 304028, 304047, 304269, 304270, 304303, 304305, 304306, 304310, 304330, 304487, 304659, 304968, 304973, 305306, 305313, 305507, 305716, 305846, 305931, 306137, 306196, 306343, 307335, 307338, 307620, 307761, 308007, 308083, 308131, 308211, 308291, 308633, 308720, 308725, 309314, 309435, 309473, 309484, 309540, 309644, 309660, 309697, 309720, 309804, 309871, 310109, 310131, 310143, 310149, 310153, 310163, 310171, 310198, 310251, 310415, 311092, 311334, 311700, 311766, 311859, 312048, 312287, 312288, 312454, 312478, 313397, 313428, 313757, 313807, 313821, 313846, 313961, 314205, 314240, 314241, 314277, 314279, 314282, 314298, 314299, 314304, 314305, 314395, 314429, 314444, 314445, 314454, 314455, 314456, 314457, 314459, 314460, 314461, 314465, 314480, 314482, 314484, 314486, 314487, 314488, 314491, 314492, 314500, 314503, 314504, 314514, 314526, 314528, 314535, 314536, 314538, 314539, 314550, 314551, 315438, 315446, 315528, 315586, 315625, 315662, 315733, 315738, 315740, 315744, 315769, 315854, 316205, 316206, 316212, 316213, 317882, 317894, 317896, 317897, 317900, 317973, 318174, 318191, 318192, 318216, 318246]
    for user_id in account:
        player = SpinJSON.loads(do_CONTROLAPI({'method':'get_raw_player', 'stringify': '1', 'user_id': user_id})['result'])
        if 'history' not in player:
            print 'No need to reban ' + str(user_id)
            continue
        if 'customer_support' not in player['history']:
            print 'No need to reban ' + str(user_id)
            continue
        ban_count = 0
        unban_count = 0
        for entry in player['history']['customer_support']:
            if entry['method'].upper() == 'BAN': ban_count += 1
            if entry['method'].upper() == 'UNBAN': unban_count += 1
        if ban_count > unban_count:
            print 'Reban ' + str(user_id)
