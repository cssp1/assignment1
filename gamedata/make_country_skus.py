#!/usr/bin/env python

# Copyright (c) 2015 SpinPunch Studios. All rights reserved.
# Use of this source code is governed by an MIT-style license that can be
# found in the LICENSE file.

# automatically generate per-country Alloy SKU tables
# OBSOLETE - see make_country_skus2.py

import SpinJSON
import SpinConfig

import sys, re, getopt

import locale # for pretty number printing only
locale.setlocale(locale.LC_ALL, '')

# regular expression that matches C++-style comments
comment_remover = re.compile('//.*?$') # |/\*.*?/*/

if __name__ == '__main__':
    print "// AUTO-GENERATED BY", sys.argv[0]

    game_id = SpinConfig.game()

    opts, args = getopt.gnu_getopt(sys.argv[1:], '', ['game-id=',])
    for key, val in opts:
        if key == '--game-id':
            game_id = val

    out = {}

    UNIT_BONUS = {"mf":
                  [{ "ui_bonus": "17x Unit Bonus",
                     "give_units": {"detonator_droid":8,
                                    "elevation_droid":3,
                                    "liberator":2,
                                    "warbird":2,
                                    "dragon":2,
                                    "level_by_cc": 1}, },
                   {  "ui_bonus": "11x Unit Bonus",
                      "give_units": {"detonator_droid":7,
                                     "elevation_droid":2,
                                     "liberator":1,
                                     "warbird":1,
                                     "level_by_cc": 1}, },
                   {  "ui_bonus": "7x Unit Bonus",
                      "give_units": {"detonator_droid":6,
                                     "elevation_droid":1,
                                     "level_by_cc": 1}, },
                   {  "ui_bonus": "5x Unit Bonus",
                      "give_units": {"detonator_droid":5,
                                     "level_by_cc": 1}, },
                   None,
                   None],
                  "tr": None}

    COMMENTS = ['Best Value', None, 'Most Popular', None, None, None]




    SLATES = { "P200": { "level": 200,
                         "skus": [{'alloy': 22000, 'credits': 2999},
                                  {'alloy': 14000, 'credits': 1999},
                                  {'alloy': 6000, 'credits': 999},
                                  {'alloy': 2200, 'credits': 399},
                                  {'alloy': 1000, 'credits': 196},
                                  {'alloy': 250, 'credits': 49}] },
               "P175": { "level": 175,
                         "skus": [{'alloy': 22000, 'credits': 2399},
                                  {'alloy': 14000, 'credits': 1599},
                                  {'alloy': 4000, 'credits': 599},
                                  {'alloy': 2200, 'credits': 349},
                                  {'alloy': 860, 'credits': 149},
                                  {'alloy': 280, 'credits': 49}] },
               "P150": { "level": 150,
                         "skus": [{'alloy': 22000, 'credits': 2249},
                                  {'alloy': 14000, 'credits': 1499},
                                  {'alloy': 4000, 'credits': 499},
                                  {'alloy': 2200, 'credits': 299},
                                  {'alloy': 1000, 'credits': 149},
                                  {'alloy': 300, 'credits': 49}] },

               "P135": { "level": 135,
                         "skus": [{'alloy': 22000, 'credits': 1999},
                                  {'alloy': 14000, 'credits': 1299},
                                  {'alloy': 4000, 'credits': 399},
                                  {'alloy': 2200, 'credits': 249},
                                  {'alloy': 750, 'credits': 99},
                                  {'alloy': 350, 'credits': 49}] },

               "P125": { "level": 125,
                         "skus": [{'alloy': 22000, 'credits': 1799},
                                  {'alloy': 11000, 'credits': 999},
                                  {'alloy': 5000, 'credits': 499},
                                  {'alloy': 1800, 'credits': 199},
                                  {'alloy': 800, 'credits': 98},
                                  {'alloy': 400, 'credits': 49}] },

               "P125X": { "level": 125, "slate": "X", # lower entry, lower increments
                          "skus": [{'alloy': 12000, 'credits': 999},
                                   {'alloy': 5500, 'credits': 499},
                                   {'alloy': 2000, 'credits': 199},
                                   {'alloy': 900, 'credits': 99},
                                   {'alloy': 400, 'credits': 49},
                                   {'alloy': 150, 'credits': 19}] },
               "P125Y": { "level": 125, "slate": "Y", # higher entry, higher increments
                          "skus": [{'alloy': 50000, 'credits': 3999},
                                   {'alloy': 22000, 'credits': 1999},
                                   {'alloy': 10000, 'credits': 999},
                                   {'alloy': 4500, 'credits': 499},
                                   {'alloy': 1600, 'credits': 199},
                                   {'alloy': 750, 'credits': 99}] },
               "P125Z": { "level": 125, "slate": "Z", # lower entry, higher increments
                          "skus": [{'alloy': 30000, 'credits': 2299},
                                   {'alloy': 14000, 'credits': 1299},
                                   {'alloy': 6000, 'credits': 599},
                                   {'alloy': 2700, 'credits': 299},
                                   {'alloy': 800, 'credits': 99},
                                   {'alloy': 150, 'credits': 19}] },

               "P100S": { "level": 100, "slate": "S", # "straight across" - no discounts, $5 min buy, $200 max
                          "comments": [None, None, 'Most Popular', None, None, None],
                          "skus": [{'alloy': 20000, 'credits': 2000},
                                   {'alloy': 10000, 'credits': 1000},
                                   {'alloy': 5000, 'credits': 500},
                                   {'alloy': 2500, 'credits': 250},
                                   {'alloy': 1000, 'credits': 100},
                                   {'alloy': 500, 'credits': 50},
                                   ] },
               "P100L": { "level": 100, "slate": "L", # "straight across" - no discounts, $1 min buy, $200 max
                          "comments": [None, None, 'Most Popular', None, None, None],
                          "skus": [{'alloy': 20000, 'credits': 2000},
                                   {'alloy': 10000, 'credits': 1000},
                                   {'alloy': 5000, 'credits': 500},
                                   {'alloy': 1000, 'credits': 100},
                                   {'alloy': 500, 'credits': 50},
                                   {'alloy': 100, 'credits': 10},
                                   ] },

               # FALLBACK OPTION if country is not identified - a copy of P100L
               "FALLBACK": { "level": 100, "slate": "FALLBACK", # "straight across" - no discounts, $1 min buy, $200 max
                          "comments": [None, None, 'Most Popular', None, None, None],
                          "skus": [{'alloy': 20000, 'credits': 2000},
                                   {'alloy': 10000, 'credits': 1000},
                                   {'alloy': 5000, 'credits': 500},
                                   {'alloy': 1000, 'credits': 100},
                                   {'alloy': 500, 'credits': 50},
                                   {'alloy': 100, 'credits': 10},
                                   ] },

               "P100H": { "level": 100, "slate": "H", # "straight across" - no discounts, $10 min buy, $400 max
                          "comments": [None, None, None, 'Most Popular', None, None],
                          "skus": [{'alloy': 40000, 'credits': 4000},
                                   {'alloy': 20000, 'credits': 2000},
                                   {'alloy': 10000, 'credits': 1000},
                                   {'alloy': 5000, 'credits': 500},
                                   {'alloy': 2500, 'credits': 250},
                                   {'alloy': 1000, 'credits': 100},
                                   ] },

        # try table that bumps you up from $1 min buy to $5 min buy after first purchase
               "P100LH1": { "level": 100, "slate": "LH1", # "straight across" - no discounts, $1 min buy, $200 max
                            "requires": [{ "predicate": "PLAYER_HISTORY", "key": "money_spent", "method": "<", "value": 0.01 }],
                            "comments": [None, None, 'Most Popular', None, None, None],
                            "skus": [{'alloy': 20000, 'credits': 2000},
                                     {'alloy': 10000, 'credits': 1000},
                                     {'alloy': 5000, 'credits': 500},
                                     {'alloy': 1000, 'credits': 100},
                                     {'alloy': 500, 'credits': 50},
                                     {'alloy': 100, 'credits': 10},
                                     ] },
               "P100LH2": { "level": 100, "slate": "LH2", # "straight across" - no discounts, $1 min buy, $200 max
                            "requires": [{ "predicate": "PLAYER_HISTORY", "key": "money_spent", "method": ">=", "value": 0.01 }],
                            "comments": [None, None, None, 'Most Popular', None, None],
                            "skus": [{'alloy': 40000, 'credits': 4000},
                                     {'alloy': 20000, 'credits': 2000},
                                     {'alloy': 10000, 'credits': 1000},
                                     {'alloy': 5000, 'credits': 500},
                                     {'alloy': 2500, 'credits': 250},
                                     {'alloy': 500, 'credits': 50},
                                     ] },

               "P075": { "level": 75,
                         "skus": [{'alloy': 22000, 'credits': 1129},
                                  {'alloy': 14000, 'credits': 749},
                                  {'alloy': 6000, 'credits': 374},
                                  {'alloy': 2200, 'credits': 149},
                                  {'alloy': 1000, 'credits': 78},
                                  {'alloy': 360, 'credits': 29}] },

               "P050": { "level": 50,
                         "skus": [{'alloy': 22000, 'credits': 749},
                                  {'alloy': 14000, 'credits': 499},
                                  {'alloy': 6000, 'credits': 249},
                                  {'alloy': 2200, 'credits': 99},
                                  {'alloy': 1000, 'credits': 49},
                                  {'alloy': 180, 'credits': 9},
                                  ] },

               "P050X": { "level": 50, "slate": "X", # ultra-low entry
                          "skus": [{'alloy': 22000, 'credits': 749},
                                   {'alloy': 14000, 'credits': 499},
                                   {'alloy': 2400, 'credits': 99},
                                   {'alloy': 1100, 'credits': 49},
                                   {'alloy': 500, 'credits': 25},
                                   {'alloy': 100, 'credits': 5},
                                   ] },
               "P050Y": { "level": 50, "slate": "Y", # deeper discounts at large buys
                          "skus": [{'alloy': 25000, 'credits': 749},
                                   {'alloy': 16000, 'credits': 499},
                                   {'alloy': 7500, 'credits': 249},
                                   {'alloy': 2500, 'credits': 99},
                                   {'alloy': 1000, 'credits': 49},
                                   {'alloy': 180, 'credits': 9},
                                   ] },

               "P050XY": { "level": 50, "slate": "XY", # hybrid of P050X and P050Y
                          "skus": [{'alloy': 25000, 'credits': 749},
                                   #{'alloy': 16000, 'credits': 499},
                                   {'alloy': 7500, 'credits': 249},
                                   {'alloy': 2500, 'credits': 99},
                                   {'alloy': 1000, 'credits': 49},
                                   {'alloy': 500, 'credits': 25},
                                   {'alloy': 100, 'credits': 5},
                                   ] },

               "P050Z": { "level": 50, "slate": "Z", # lower increments
                          "skus": [{'alloy': 14700, 'credits': 499},
                                   {'alloy': 5600, 'credits': 199},
                                   {'alloy': 2400, 'credits': 99},
                                   {'alloy': 1100, 'credits': 49},
                                   {'alloy': 600, 'credits': 29},
                                   {'alloy': 180, 'credits': 9},
                                   ] },

              }

    COUNTRY_MAP = {
        # special cases

        # T070C_geo_muffins_NO
        "no": "P175",

        # T070E_geo_muffins_AB
        "dk": "P135",
        "gb": "P135",
        "nl": "P135",
        "za": "P135",
        "se": "P135",
        "uy": "P135",
        "it": "P135",

        # old "Region A"
        "at": "P150",
        "fi": "P150",
        "nz": "P150",
        "au": "P150",
        "kw": "P150",
        "gg": "P150",
        "im": "P150",
        "qa": "P150",
        "bh": "P150",
        "mq": "P150",

        # old "Region B"
        "ca": "P100L",
        "us": "P100L",
        "is": "P100L",
        "ly": "P100L",
        "kr": "P100L",
        "tw": "P100L",

        # old "Region C"
        "be": "P050XY",
        "br": "P050XY",
        "ch": "P050XY",
        "de": "P050XY",
        "es": "P050XY",
        "fr": "P050XY",
        "gr": "P050XY",
        "hk": "P050XY",
        "hu": "P050XY",
        "ie": "P050XY",
        "il": "P050XY",
        "pe": "P050XY",
        "pr": "P050XY",
        "pt": "P050XY",
        "ro": "P050XY",
        "sa": "P050XY",
        "sg": "P050XY",
        "sk": "P050XY",
        "ve": "P050XY",

        # old "Region D"
        "al": "P050XY",
        "ar": "P050XY",
        "ba": "P050XY",
        "bg": "P050XY",
        "cl": "P050XY",
        "co": "P050XY",
        "cr": "P050XY",
        "do": "P050XY",
        "dz": "P050XY",
        "eg": "P050XY",
        "ge": "P050XY",
        "gt": "P050XY",
        "hr": "P050XY",
        "id": "P050XY",
        "in": "P050XY",
        "jo": "P050XY",
        "lt": "P050XY",
        "ma": "P050XY",
        "me": "P050XY",
        "mk": "P050XY",
        "mx": "P050XY",
        "my": "P050XY",
        "ng": "P050XY",
        "pa": "P050XY",
        "ph": "P050XY",
        "pk": "P050XY",
        "pl": "P050XY",
        "rs": "P050XY",
        "sv": "P050XY",
        "th": "P050XY",
        "tn": "P050XY",
        "tr": "P050XY",
        "vn": "P050XY",
        "ae": "P050XY",
        "am": "P050XY",
        "ax": "P050XY",
        "ba": "P050XY",
        "lb": "P050XY",
        "np": "P050XY",
        }

    for country, slate in COUNTRY_MAP.iteritems():
        assert slate in SLATES

    for slate_name, val in SLATES.iteritems():
        check_level = None
        last_level = None
        last_sku = None

        country_set = set()
        negate_country_list = False
        if slate_name == "FALLBACK":
            # special handling for fallback slate
            [country_set.add(k) for k in COUNTRY_MAP.iterkeys()]
            negate_country_list = True
        else:
            [country_set.add(k) for k, slate in COUNTRY_MAP.iteritems() if slate == slate_name]
        country_list = sorted(list(country_set))

        for sku_index in xrange(len(val['skus'])):
            data = val['skus'][sku_index]
            bonus = UNIT_BONUS[game_id][sku_index] if UNIT_BONUS[game_id] else None
            comment = val.get('comments',COMMENTS)[sku_index]

            sku_name = 'BUY_GAMEBUCKS_%d' % data['alloy'] + ('_UNITS' if bonus else '') + '_C_P%03d' % val['level'] + (val.get('slate',''))

            # perform some sanity checks on pricing
            if last_sku is not None:
                # make sure SKUs are listed in descending order
                assert data['alloy'] < last_sku['alloy']

            # check for big (>50%) deviations in alloy exchange rate across SKUs
            this_level = float(data['alloy'])/data['credits']
            if check_level is None:
                check_level = this_level
            else:
                delta = abs((this_level - check_level)/check_level)
                if delta > 0.50:
                    raise Exception('big deviation on SKU: '+sku_name)

            # make sure discount factor does not decline for larger purchases
            if last_level is not None:
                if this_level > last_level:
                    raise Exception('alloy exchange rate declines on SKU: '+sku_name)
            last_level = this_level
            last_sku = data

            assert sku_name not in out
            pretty_alloy_amount = locale.format('%d', data['alloy'], True)
            sku = {
                'quantity': data['alloy'],
                'ui_name': '%GAMEBUCKS_QUANTITY %GAMEBUCKS_NAME', # '%s Alloy' % pretty_alloy_amount,
                'ui_description': "%GAMEBUCKS_QUANTITY %GAMEBUCKS_NAME, which can be spent in game on speed-ups, resources, and special items", # % pretty_alloy_amount,
                'paid': 1, 'currency': 'fbcredits', 'price_formula': 'constant',
                'price': data['credits'], 'activation': 'instant', 'icon': 'store_icon_grow_perimeter'
                }
            if comment: sku['ui_comment'] = comment
            if bonus:
                sku['ui_bonus'] = bonus['ui_bonus']
                sku['give_units'] = bonus['give_units']

            pred = { 'predicate': 'AND', 'subpredicates': [
                { 'predicate': "ANY_ABTEST", "key": "default_country_gamebucks_skus", "value": 1, "default": 1 },
                ] }

            if not country_list: continue

            country_pred = { 'predicate': "COUNTRY", "countries": country_list }
            if negate_country_list:
                country_pred = { 'predicate': "NOT", "subpredicates": [country_pred,] }
            pred['subpredicates'].append(country_pred)

            if 'requires' in val:
                pred['subpredicates'] += val['requires']

            if 'requires' in data:
                pred['subpredicates'] += data['requires']

            sku['requires'] = pred

            out[sku_name] = sku

    count = 0
    out_keys = sorted(out.keys(), key = lambda x: -int(x.split('_')[2]))
    for name in out_keys:
        data = out[name]
        print '"%s":' % name, SpinJSON.dumps(data, pretty = False),
        if 1 or count != len(out)-1:
            print ','
        else:
            print
        count += 1
